<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Basic Principles of LTE Reselection</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 20px;
        }

        h1 {
            color: blue;
            font-weight: bold;
            text-align: center;
        }

        .container {
            display: flex;
            justify-content: space-between;
        }

        .box {
            border: 2px solid #333;
            padding: 20px;
            background-color: #fff;
            width: 48%;
        }

        .results-section {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .results-section .box {
            width: 20%;
        }

        .parameters {
            list-style-type: none;
            padding: 0;
        }

        .parameters li {
            padding: 10px 0;
        }

    </style>
</head>
<body>
    <h1>Basic Principles of LTE Reselection<br></h1>    
    <h2>Srxlev = Qrxlevemeas - qRxLevMin + qRxlevMinOffset</h2>
    

    <main>
        <div class="container">
            <!-- SOURCE CELL -->
            <div class="box">
                <h2>SOURCE CELL</h2>
                <ul class="parameters">
                    <li>
                        Qrxlevmeas: 
                        <input type="range" id="qrxlevmeas-slider-source" min="-140" max="-40" value="0" oninput="displayValue('qrxlevmeas-source', 'qrxlevmeas-slider-source'); calculateSrxlevSource();">
                        <input type="text" id="qrxlevmeas-source" value="0" onchange="calculateSrxlevSource()">
                        <span id="qrxlevmeas-output-source"></span>
                    </li>
                    <li>
                        Qrxlevmin: 
                        <input type="text" id="qrxlevmin-source" value="-124" onchange="calculateSrxlevSource()">
                        <span id="qrxlevmin-output-source"></span>
                    </li>
                    <li>
                        S_rxlev Source Cell: <span id="srxlev-source"></span>
                    </li>
                    <li>
                        Priority: <input type="text" id="priority-source" value="7">
                        <span id="priority-output-source"></span>
                    </li>
                </ul>
            </div>

            <!-- TARGET CELL -->
            <div class="box">
                <h2>TARGET CELL</h2>
                <ul class="parameters">
                    <li>
                        Qrxlevmeas: 
                        <input type="range" id="qrxlevmeas-slider-target" min="-140" max="-40" value="0" oninput="displayValue('qrxlevmeas-target', 'qrxlevmeas-slider-target'); calculateSrxlevTarget();">
                        <input type="text" id="qrxlevmeas-target" value="0" onchange="calculateSrxlevTarget()">
                        <span id="qrxlevmeas-output-target"></span>
                    </li>
                    <li>
                        Qrxlevmin: 
                        <input type="text" id="qrxlevmin-target" value="-124" onchange="calculateSrxlevTarget()">
                        <span id="qrxlevmin-output-target"></span>
                    </li>
                    <li>
                        S_rxlev Target Cell: <span id="srxlev-target"></span>
                    </li>
                    <li>
                        Priority: <input type="text" id="priority-target" value="7">
                        <span id="priority-output-target"></span>
                    </li>
                </ul>
            </div>
        </div>

        <div class="container">
            <!-- PRIO PARAMETERS -->
            <div class="box">
                <h2>PRIO PARAMETERS</h2>
                <ul class="parameters">
                    <li>
                        threshServingLow: <input type="text" id="threshservinglow" value="2" onchange="checkLowPrio(); calculateInterMeasurement(); calculateIntraMeasurement();">
                        <span id="threshservinglow-output"></span>
                    </li>
                    <li>
                        threshXHigh: <input type="text" id="threshxhigh" value="3">
                        <span id="threshxhigh-output"></span>
                    </li>
                    <li>
                        threshXLow: <input type="text" id="threshxlow" value="2">
                        <span id="threshxlow-output"></span>
                    </li>
                </ul>
            </div>

            <!-- SEARCH PARAMETERS -->
            <div class="box">
                <h2>SEARCH PARAMETERS</h2>
                <ul class="parameters">
                    <li>
                        S_Intra_Search: <input type="text" id="s-intra-search" value="31" onchange="calculateIntraMeasurement();">
                        <span id="s-intra-search-output"></span>
                    </li>
                    <li>
                        S_Non_Intra_Search: <input type="text" id="s-non-intra-search" value="3" onchange="calculateInterMeasurement();">
                        <span id="s-non-intra-search-output"></span>
                    </li>
                </ul>
            </div>
        </div>
        <div class="results-section">
            <!-- Looking for LOW PRIO -->
            <div class="box">
                <h2>Looking for LOW PRIO</h2>
                <p id="looking-for-low-prio"></p>
            </div>

            <!-- Snonintrasearch allow INTER measurements? -->
            <div class="box">
                <h2>Snonintrasearch allow INTER measurements?</h2>
                <p id="snonintrasearch-allow-inter"></p>
            </div>

            <!-- Sintrasearch allow INTRA measurements? -->
            <div class="box">
                <h2>Sintrasearch allow INTRA measurements?</h2>
                <p id="sintrasearch-allow-intra"></p>
            </div>

            <!-- Decision -->
            <div class="box">
                <h2>Decision</h2>
                <p id="decision"></p>
            </div>
        </div>
    </main>

    <script>
        function displayValue(outputId, inputId) {
            const inputValue = document.getElementById(inputId).value;
            document.getElementById(outputId).innerText = inputValue;
        }

        function calculateSrxlevSource() {
            const qrxlevmeas = parseFloat(document.getElementById("qrxlevmeas-source").value);
            const qrxlevmin = parseFloat(document.getElementById("qrxlevmin-source").value);
            const srxlev = qrxlevmeas - qrxlevmin;
            document.getElementById("srxlev-source").innerText = srxlev;
            checkLowPrio();
            calculateInterMeasurement();
            calculateIntraMeasurement();
            decision();
        }

        function calculateSrxlevTarget() {
            const qrxlevmeas = parseFloat(document.getElementById("qrxlevmeas-target").value);
            const qrxlevmin = parseFloat(document.getElementById("qrxlevmin-target").value);
            const srxlev = qrxlevmeas - qrxlevmin;
            document.getElementById("srxlev-target").innerText = srxlev;
            decision();
        }

        function checkLowPrio() {
            const srxlevSource = parseFloat(document.getElementById("srxlev-source").innerText);
            const threshServingLow = parseFloat(document.getElementById("threshservinglow").value);
            const outputElement = document.getElementById("looking-for-low-prio");

            if (srxlevSource > threshServingLow) {
                outputElement.innerHTML = "<strong>Looking for SAME or HIGH PRIO ONLY due Srxlev > Threshservinglow</strong>";
            } else {
                outputElement.innerHTML = "<strong>Looking for LOW PRIO due Srxlev â‰¤ Threshservinglow</strong>";
            }
        }

        function calculateInterMeasurement() {
            const qrxlevmeas = parseFloat(document.getElementById("qrxlevmeas-source").value);
            const qrxlevmin = parseFloat(document.getElementById("qrxlevmin-source").value);
            const sNonIntraSearch = parseFloat(document.getElementById("s-non-intra-search").value);
            const outputElement = document.getElementById("snonintrasearch-allow-inter");

            if (qrxlevmeas >= qrxlevmin + sNonIntraSearch) {
                outputElement.innerHTML = "<strong>No INTER search allowed</strong>";
            } else {
                outputElement.innerHTML = "<strong>YES Allow INTER search</strong>";
            }
        }

        function calculateIntraMeasurement() {
            const qrxlevmeas = parseFloat(document.getElementById("qrxlevmeas-source").value);
            const qrxlevmin = parseFloat(document.getElementById("qrxlevmin-source").value);
            const sIntraSearch = parseFloat(document.getElementById("s-intra-search").value);
            const outputElement = document.getElementById("sintrasearch-allow-intra");

            if (qrxlevmeas >= qrxlevmin + sIntraSearch) {
                outputElement.innerHTML = "<strong>No INTRA search allowed</strong>";
            } else {
                outputElement.innerHTML = "<strong>YES Allow INTRA search</strong>";
            }
        }
        function displayValue(outputId, inputId) {
            document.getElementById(outputId).value = document.getElementById(inputId).value;
        }

        function decision() {
            const sintrasearchAllow = document.getElementById("sintrasearch-allow-intra").innerText;
            const qrxlevmeasSource = parseFloat(document.getElementById("qrxlevmeas-source").value);
            const qrxlevmeasTarget = parseFloat(document.getElementById("qrxlevmeas-target").value);
            const threshServingLow = parseFloat(document.getElementById("threshservinglow").value);
            const threshXLow = parseFloat(document.getElementById("threshxlow").value);
            const threshXHigh = parseFloat(document.getElementById("threshxhigh").value);
            const prioritySource = parseFloat(document.getElementById("priority-source").value);
            const priorityTarget = parseFloat(document.getElementById("priority-target").value);
            const srxlevSource = parseFloat(document.getElementById("srxlev-source").innerText);
            const srxlevTarget = parseFloat(document.getElementById("srxlev-target").innerText);
            const outputElement = document.getElementById("decision");

            if (prioritySource === priorityTarget) {
                if (sintrasearchAllow === "YES Allow INTRA search") {
                    if (srxlevTarget > srxlevSource) {
                        outputElement.innerHTML = "<span style='color: green;'><strong>RESELECTION DONE</strong></span>";
                    } else {
                        outputElement.innerHTML = "<span style='color: red;'><strong>NO RESELECTION ALLOWED</strong></span>";
                    }
                } else {
                    outputElement.innerHTML = "<span style='color: red;'><strong>NO RESELECTION ALLOWED</strong></span>";
                }
            } else if (prioritySource > priorityTarget) {
                if (srxlevSource <= threshServingLow) {
                    if (threshXLow > srxlevTarget) {
                        outputElement.innerHTML = "<span style='color: green;'><strong>RESELECTION DONE</strong></span>";
                    } else {
                        outputElement.innerHTML = "<span style='color: red;'><strong>NO RESELECTION ALLOWED to LOW PRIO</strong></span>";
                    }
                } else {
                    outputElement.innerHTML = "<span style='color: red;'><strong>NO RESELECTION ALLOWED</strong></span>";
                }
            } else if (prioritySource < priorityTarget) {
                if (srxlevTarget > threshXHigh) {
                    outputElement.innerHTML = "<span style='color: green;'><strong>RESELECTION DONE</strong></span>";
                } else {
                    outputElement.innerHTML = "<span style='color: red;'><strong>NO RESELECTION ALLOWED</strong></span>";
                }
            }
        }



        // Event listeners to update values and calculations when inputs change
        document.getElementById("qrxlevmeas-source").addEventListener("input", calculateSrxlevSource);
        document.getElementById("qrxlevmin-source").addEventListener("input", calculateSrxlevSource);
        document.getElementById("qrxlevmeas-target").addEventListener("input", calculateSrxlevTarget);
        document.getElementById("qrxlevmin-target").addEventListener("input", calculateSrxlevTarget);
        document.getElementById("threshservinglow").addEventListener("input", checkLowPrio);
        document.getElementById("s-non-intra-search").addEventListener("input", calculateInterMeasurement);
        document.getElementById("s-intra-search").addEventListener("input", calculateIntraMeasurement);

    </script>
</body>
</html>
